- name: Deploy
  hosts: all
  become: yes
  vars:
    mariadb_root_password: "rootpass"
    mariadb_database: "wordpress"
    mariadb_user: "wpuser"
    mariadb_password: "wpuserpass"
    mariadb_repl_password: "replpass"

  tasks:
    - name: Prep
      apt:
        name:
          - docker.io
          - docker-compose
          - python3-docker
        state: present
        update_cache: yes

    - name: StartDocker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: CreateNetworks
      docker_network:
        name: "{{ item.name }}"
        driver: bridge
        internal: "{{ item.internal }}"
      loop:
        - { name: frontend, internal: no }
        - { name: backend, internal: yes }

    - name: CreateDB volumes
      docker_volume:
        name: "{{ item }}"
      loop:
        - mariadb_master_data
        - mariadb_slave_data

    - name: StartDB Master
      docker_container:
        name: mariadb_master
        image: mariadb:10.5
        state: started
        restart_policy: unless-stopped
        env:
          MYSQL_ROOT_PASSWORD: "{{ mariadb_root_password }}"
          MYSQL_DATABASE: "{{ mariadb_database }}"
          MYSQL_USER: "{{ mariadb_user }}"
          MYSQL_PASSWORD: "{{ mariadb_password }}"
          SERVER_ID: "1"
        volumes:
          - mariadb_master_data:/var/lib/mysql
        networks:
          - name: backend
        command: >
          mysqld
          --log-bin=mysql-bin
          --binlog-format=ROW
          --server-id=1
          --bind-address=0.0.0.0

    - name: Wait
      community.docker.docker_container_exec:
        container: mariadb_master
        command: mysqladmin ping -uroot -p{{ mariadb_root_password }}
        retries: 10
        delay: 10

    - name: Configure Master replication
      community.docker.docker_container_exec:
        container: mariadb_master
        command: >
          mysql -uroot -p{{ mariadb_root_password }} -e
          "CREATE USER 'repl'@'%' IDENTIFIED BY '{{ mariadb_repl_password }}';
          GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';
          FLUSH PRIVILEGES;"

    - name: Master Log
      community.docker.docker_container_exec:
        container: mariadb_master
        command: >
          mysql -uroot -p{{ mariadb_root_password }} -e "SHOW MASTER STATUS\G"
      register: master_status

    - name: StartDB Slave
      docker_container:
        name: mariadb_slave
        image: mariadb:10.5
        state: started
        restart_policy: unless-stopped
        env:
          MYSQL_ROOT_PASSWORD: "{{ mariadb_root_password }}"
          SERVER_ID: "2"
        volumes:
          - mariadb_slave_data:/var/lib/mysql
        networks:
          - name: backend
        command: >
          mysqld
          --server-id=2
          --relay-log=slave-relay-bin
          --bind-address=0.0.0.0

    - name: Wait Slave
      community.docker.docker_container_exec:
        container: mariadb_slave
        command: mysqladmin ping -uroot -p{{ mariadb_root_password }}
        retries: 10
        delay: 10

    - name: Configure Slave replication
      community.docker.docker_container_exec:
        container: mariadb_slave
        command: >
          mysql -uroot -p{{ mariadb_root_password }} -e
          "CHANGE MASTER TO
          MASTER_HOST='mariadb_master',
          MASTER_USER='repl',
          MASTER_PASSWORD='{{ mariadb_repl_password }}',
          MASTER_LOG_FILE='{{ master_status.stdout | regex_search('File: (\\S+)') | default('mysql-bin.000001') }}',
          MASTER_LOG_POS={{ master_status.stdout | regex_search('Position: (\\d+)') | default(4) }};
          START SLAVE;"

    - name: StartWP
      docker_container:
        name: wordpress
        image: wordpress:5.9-php7.4-apache
        state: started
        restart_policy: unless-stopped
        ports:
          - "8081:80"  # Исправлен порт 80 вместо 81
        env:
          WORDPRESS_DB_HOST: "mariadb_master:3306"
          WORDPRESS_DB_USER: "{{ mariadb_user }}"
          WORDPRESS_DB_PASSWORD: "{{ mariadb_password }}"
          WORDPRESS_DB_NAME: "{{ mariadb_database }}"
        networks:
          - name: frontend
          - name: backend
        force_kill: yes
