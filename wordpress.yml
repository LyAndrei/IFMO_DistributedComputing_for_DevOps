
#- name: Remove old containers and volumes
#  hosts: db_master,db_slave
#  become: yes
#  tasks:
#    - name: Stop and remove containers
#      docker_container:
#        name: "{{ item }}"
#        state: absent
#        volumes: yes
#      loop:
#        - mariadb-master
#        - mariadb-slave
#
#    - name: Force remove explicit volumes
#      docker_volume:
#        name: "{{ item }}"
#        state: absent
#      loop:
#        - mariadb_master_data
#        - mariadb_slave_data
#      ignore_errors: yes
#
#    - name: Pause after cleanup
#      pause:
#        seconds: 20  # Увеличено время для гарантии удаления
#
- name: Prep
  hosts: all
  become: yes
  tasks:
    - name: Update facts
      setup:

- name: Docker
  hosts: all
  become: yes
  tasks:
    - name: Install Docker
      apt:
        name:
          - docker.io
#          - docker-compose пришел из первой ДЗ, впрочем я так понял он и там был не нужен
          - python3-docker
        state: present
        update_cache: yes

    - name: Start Docker
      systemd:
        name: docker
        state: started
        enabled: yes

- name: Conf DBs
  hosts: db_master,db_slave
  become: yes
  tasks:
    - name: Install MySQL deps
      apt:
        name:
          - python3-pymysql
          - python3-mysqldb
        state: present
        update_cache: yes

#    - name: Clean networks
#      docker_network:
#        name: "{{ item }}"
#        state: absent
#      loop: [backend, frontend]
#      ignore_errors: yes

    - name: Networks
      docker_network:
        name: "{{ item }}"
        driver: bridge
        state: present
      loop: [backend, frontend]

- name: Master
  hosts: db_master
  become: yes
  tasks:
    - name: Config master
      copy:
        content: |
          [mysqld]
          server_id=1
          log_bin=mysql-bin
          binlog_format=row
          innodb_flush_log_at_trx_commit=1
          sync_binlog=1
        dest: /etc/mysql/master.cnf
        owner: root
        group: root
        mode: 0644

    - name: Start master
      docker_container:
        name: mariadb-master
        image: mariadb:10.5
        state: started
        restart_policy: unless-stopped
        env:
          MYSQL_ROOT_PASSWORD: "{{ mariadb_root_password }}"
          MYSQL_DATABASE: "{{ mariadb_database }}"
          MYSQL_USER: "{{ mariadb_user }}"
          MYSQL_PASSWORD: "{{ mariadb_password }}"
        volumes:
          - mariadb_master_data:/var/lib/mysql
          - /etc/mysql/master.cnf:/etc/mysql/conf.d/server_id.cnf
        networks:
          - name: backend
        ports:
          - "3306:3306"
        force_kill: yes

    - name: Wait
      pause:
        seconds: 30

    - name: Replica user
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        name: "{{ mariadb_repl_user }}"
        password: "{{ mariadb_repl_password }}"
        host: "%"
        priv: "*.*:REPLICATION SLAVE"
        state: present
      run_once: yes

- name: Slave
  hosts: db_slave
  become: yes
  tasks:
    - name: Config slave
      copy:
        content: |
          [mysqld]
          server_id=2
          log_bin=mysql-bin
          binlog_format=row
          relay_log=mysql-relay-bin
          read_only=1
        dest: /etc/mysql/slave.cnf
        owner: root
        group: root
        mode: 0644

    - name: Start slave
      docker_container:
        name: mariadb-slave
        image: mariadb:10.5
        state: started
        restart_policy: unless-stopped
        env:
          MYSQL_ROOT_PASSWORD: "{{ mariadb_root_password }}"
        volumes:
          - mariadb_slave_data:/var/lib/mysql
          - /etc/mysql/slave.cnf:/etc/mysql/conf.d/server_id.cnf
        networks:
          - name: backend
        ports:
          - "3306:3306"

    - name: Wait slave
      pause:
        seconds: 30

    - name: Replica
      block:
        - name: Stop slave
          community.mysql.mysql_query:
            login_user: root
            login_password: "{{ mariadb_root_password }}"
            query: "STOP SLAVE"
          ignore_errors: yes

        - name: Reset slave
          community.mysql.mysql_query:
            login_user: root
            login_password: "{{ mariadb_root_password }}"
            query: "RESET SLAVE ALL"

        - name: Set master
          community.mysql.mysql_query:
            login_user: root
            login_password: "{{ mariadb_root_password }}"
            query: |
              CHANGE MASTER TO
              MASTER_HOST='{{ hostvars[groups['db_master'][0]].inventory_hostname }}',
              MASTER_USER='{{ mariadb_repl_user }}',
              MASTER_PASSWORD='{{ mariadb_repl_password }}',
              MASTER_PORT=3306,
              MASTER_USE_GTID = slave_pos

        - name: Start slave
          community.mysql.mysql_query:
            login_user: root
            login_password: "{{ mariadb_root_password }}"
            query: "START SLAVE"

- name: Deploy WP
  hosts: wordpress_server
  become: yes
  tasks:
    - name: Start WP
      docker_container:
        name: wordpress
        image: wordpress:5.9-php7.4-apache
        state: started
        restart_policy: unless-stopped
        ports:
          - "8081:80"
        env:
          WORDPRESS_DB_HOST: "{{ hostvars[groups['db_master'][0]].inventory_hostname }}:3306"
          WORDPRESS_DB_USER: "{{ mariadb_user }}"
          WORDPRESS_DB_PASSWORD: "{{ mariadb_password }}"
          WORDPRESS_DB_NAME: "{{ mariadb_database }}"
        networks:
          - name: frontend
          - name: backend
